name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  gcc:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Install google test and boost, also install g++-11
      run: sudo apt-get install libgtest-dev googletest googletest-tools google-mock libboost-dev g++-11
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: CMake Lib release config
      run: cmake -S . -B release -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_BUILD_TYPE=Release
    - name: CMake Lib release build
      run: cmake --build release
    - name: CMake Lib debug config
      run: cmake -S . -B debug -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_BUILD_TYPE=Debug
    - name: CMake Lib debug build
      run: cmake --build debug

    - name: Run tests
      run: debug/tests/fin_data_tests

  clang:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Install google test and boost, also install clang-15
        run: sudo apt-get install libgtest-dev googletest googletest-tools google-mock libboost-dev clang-15
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: CMake Lib release config
        run: cmake -S . -B release -DCMAKE_CXX_COMPILER=clang-15 -DCMAKE_BUILD_TYPE=Release
      - name: CMake Lib release build
        run: cmake --build release
      - name: CMake Lib debug config
        run: cmake -S . -B debug -DCMAKE_CXX_COMPILER=clang-15 -DCMAKE_BUILD_TYPE=Debug
      - name: CMake Lib debug build
        run: cmake --build debug

      - name: Run tests
        run: debug/tests/fin_data_tests

  msvc:
    runs-on: windows-latest
    strategy:
      matrix:
        config:
          - { name: 'Debug', build_type: 'Debug' }
          - { name: 'Release', build_type: 'Release' }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up MSVC
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install Boost
        run: |
          $BOOST_VERSION=1.75.0
          $BOOST_ARCHITECTURE=msvc-14.2
          Invoke-WebRequest -Uri "https://dl.bintray.com/boostorg/release/$BOOST_VERSION/binaries/$BOOST_ARCHITECTURE/$BOOST_VERSION-msvc-14.2-$BOOST_ARCHITECTURE.zip" -OutFile "boost.zip"
          Expand-Archive -Path "boost.zip" -DestinationPath "C:\Boost"
          Remove-Item -Path "boost.zip"
          echo "::set-env name=BOOST_ROOT::C:\Boost\boost_$BOOST_VERSION"
          echo "BOOST_ROOT=C:\Boost\boost_$BOOST_VERSION" >> $GITHUB_ENV
      - name: Install Google Test
        run: |
          git clone https://github.com/google/googletest.git
          cd googletest
          mkdir build
          cd build
          cmake ..
          cmake --build .
          cd ../..
          echo "::set-env name=GTEST_ROOT::$(pwd)/googletest"
          echo "GTEST_ROOT=$(pwd)/googletest" >> $GITHUB_ENV
      - name: Build
        run: msbuild /p:Configuration=$BUILD_TYPE
      - name: Run tests
        run: ./bin/$BUILD_TYPE/fin_data_tests.exe
        env:
          GTEST_ROOT: ${{ env.GTEST_ROOT }}
          BOOST_ROOT: ${{ env.BOOST_ROOT }}
          BUILD_TYPE: ${{ matrix.config.name }}

  gcc_file_from_chat_gpt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup GCC
        uses: actions/setup-gcc@v1
        with:
          compiler-version: latest

      - name: Install Boost and Google Test
        run: |
          sudo apt-get update
          sudo apt-get install -y libboost-all-dev libgtest-dev

      - name: Compile
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make

      - name: Run Tests
        run: |
          cd build
          ./fin_data_tests


  msvc_from_stack_overflow:
    runs-on: windows-latest
    strategy:
      matrix:
        config:
          - { name: 'Debug', build_type: 'Debug' }
          - { name: 'Release', build_type: 'Release' }
    steps:
      - name: Download Boost
        shell: powershell
        run: |
          $uri = 'https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.zip'
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Invoke-WebRequest -Uri $uri -OutFile C:\boost.zip -UserAgent [Microsoft.PowerShell.Commands.PSUserAgent]::Chrome
      - name: Unzip boost
        run: Expand-Archive -LiteralPath 'C:\boost.zip' -DestinationPath C:\install\
      - name: Run bootstrap
        shell: powershell
        run: |
          cd C:\install\boost_1_68_0\tools\build\
          .\bootstrap.bat gcc
      - name: Install Boost
        continue-on-error: true
        shell: powershell
        run: |
          cd C:\install\boost_1_68_0\tools\build\
          .\b2 --with-system --with-program_options --with-serialization --with-test --build-type=complete -j2 --prefix="C:\boost-build" toolset=gcc install
          $env:Path += ";C:\boost-build\bin"
          cd C:\install\boost_1_68_0
          C:\boost-build\bin\b2.exe --with-system --with-program_options --with-serialization --with-test --build-type=complete -j2 --build-dir="C:\install\boost_1_68_0\build" --build-type=complete --prefix="C:\boost" toolset=gcc install
      - name: Check libs names
        if: success() || failure()
        run: |
          cd c:\boost\lib
          Get-ChildItem
      - name: Running cmake
        if: success() || failure()
        run: |
          $env:BOOST_INCLUDEDIR = 'C:\boost\include'
          $env:BOOST_LIBRARYDIR = 'C:\boost\lib'
          $env:BOOST_ROOT = 'C:\boost'
          mkdir build
          cd build
          cmake -DBOOST_ROOT=c:/boost -DBoost_DEBUG=ON -G "MinGW Makefiles" ..
      - name: Running make (MinGW Makefiles)
        if: success() || failure()
        run: |
          cd build
          make